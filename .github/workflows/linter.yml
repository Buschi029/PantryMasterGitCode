name: Linter and Unit Tests

on: push

jobs:
  super-lint:
    name: Lint code base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker
      run: |
        docker build -t mybackendinventorybackend ./Backend/inventoryBackend
        docker build -t mybackendshoppingbackend ./Backend/shoppingBackend
        docker run -d --name mybackendinventorybackend mybackendinventorybackend
        docker run -d --name mybackendshoppingbackend mybackendshoppingbackend

    - name: Run Unit Tests in Docker
      run: |
        docker exec -i mybackendinventorybackend pip install pytest
        docker exec -i mybackendshoppingbackend pip install pytest
        docker exec -i mybackendinventorybackend pytest
        docker exec -i mybackendshoppingbackend pytest

  android-test:
          name: Android Unit Tests
          runs-on: ubuntu-latest
          steps:
          - name: Check out code
            uses: actions/checkout@v2
      
          - name: Set up JDK 17
            uses: actions/setup-java@v3
            with:
              java-version: '17'
              distribution: 'adopt'
      
          - name: Set up Android SDK
            uses: android-actions/setup-android@v2

          - name: Set up Emulator
            uses: ReactiveCircus/android-emulator-runner@v2
            with:
                api-level: 29
                script: |
                  echo "y" | avdmanager create avd -n test -k "system-images;android-29;default;x86"
                  ./gradlew connectedCheck
            
      
          - name: Grant execute permissions for gradlew and run tests
            run: |
              cd Frontend && chmod +x ./gradlew && ./gradlew clean && ./gradlew test
      
          - name: Start Emulator, Wait for it to boot and Run Tests
            run: |
                echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n test -k "system-images;android-29;default;x86"
                $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-boot-anim -no-window -accel auto &
                
                boot_completed=false
                while [ "$boot_completed" = false ]; do
                  status=$(adb -e shell getprop sys.boot_completed | tr -d '\r')
                  if [ "$status" = "1" ]; then
                    boot_completed=true
                  else
                    sleep 1
                  fi
                done
            
                ./gradlew connectedCheck

            
      