name: Linter and Tests

on: push

jobs:
  super-lint:
        name: Linter
        runs-on: ubuntu-latest
        steps:
            #Code wird ausgecheckt
          - name: Checkout code
            uses: actions/checkout@v3
            with:
              fetch-depth: 0
            #Code linten, Umgebungsvariablen setzen
          - name: Lint Code Base
            uses: github/super-linter@v5
            env:
              VALIDATE_ALL_CODEBASE: false
              DEFAULT_BRANCH: master
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #Backend Unit-Tests werden  ausgeführt
  backend-test:
          name: Backend Unit Tests
          runs-on: ubuntu-latest
          steps:
            #Code wird ausgecheckt
          - uses: actions/checkout@v2
            #Docker wird eingerichtet, Backend-Container erzeugen und Container starten
          - name: Set up Docker
            run: |
              docker build -t mybackendinventorybackend ./Backend/inventoryBackend
              docker build -t mybackendshoppingbackend ./Backend/shoppingBackend
              docker run -d --name mybackendinventorybackend mybackendinventorybackend
              docker run -d --name mybackendshoppingbackend mybackendshoppingbackend
            #Unit-Tests werden den Docker-Containern ausgeführt
          - name: Run Unit Tests in Docker
            run: |
              docker exec -i mybackendinventorybackend pip install pytest
              docker exec -i mybackendshoppingbackend pip install pytest
              docker exec -i mybackendinventorybackend pytest
              docker exec -i mybackendshoppingbackend pytest

  #Android Unit-Tests werden  ausgeführt
  android-test:
          name: Android Unit Tests
          runs-on: ubuntu-latest
          steps:
          #Code wird ausgecheckt
          - name: Check out code
            uses: actions/checkout@v2
          #JDK 17 wird eingerichtet
          - name: Set up JDK 17
            uses: actions/setup-java@v3
            with:
              java-version: '17'
              distribution: 'adopt'
          #Android SDK wird eingerichtet
          - name: Set up Android SDK
            uses: android-actions/setup-android@v2       
          #Berechtigungen für Gradle-Skript werden verteilt und Unit-Tests ausgeführt
          - name: Grant execute permissions for gradlew and run tests
            run: |
              cd Frontend && chmod +x ./gradlew && ./gradlew clean && ./gradlew test

  #Android UI-Tests werden  ausgeführt
  emulator-test:
          name: Android UI Tests
          runs-on: macos-latest

          steps:
          #Code aus dem Repository auschecken
          - name: Check out code
            uses: actions/checkout@v2
          #JDK 17 wird eingerichtet
          - name: Set up JDK 17
            uses: actions/setup-java@v3
            with:
                java-version: '17'
                distribution: 'temurin'
          #Gradlescript erhält Ausführberechtigungen
          - name: Grant execute permissions for gradlew
            run: cd Frontend && chmod +x ./gradlew
          #UI-Tests werden mit Emulator ausgeführt
          - name: Run UI-Tests
            uses: reactivecircus/android-emulator-runner@v2
            with:
                api-level: 29
                script: cd Frontend && ./gradlew connectedCheck